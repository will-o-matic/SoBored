# Evidence & Verification Patterns

## Measurement Standards

```yaml
Replace Hard Values:
  Bad: "75% perf improvement"
  Good: "<measured>% improvement"
  Best: "<baseline>→<current> (<delta>%)"

Placeholders:
  <measured_value>: Actual measurement
  <calculated_result>: Computed outcome
  <baseline>: Starting point
  <current>: Current state
  <delta>: Change amount
  <threshold>: Target value
```

## Verification Requirements

```yaml
Perf Claims:
  Required: Measurement method
  Format: "Measured via <tool>: <metric>"
  Example: "Measured via Lighthouse: FCP <value>ms"

Quality Metrics:
  Coverage: "Test coverage: <measured>%"
  Complexity: "Cyclomatic: <calculated>"
  Duplication: "DRY score: <measured>%"

Time Estimates:
  Format: "<min>-<max> <unit> (±<uncertainty>%)"
  Based on: Historical data|Complexity analysis

Implementation Sources:
  Required: Documentation reference for external libraries
  Format: "Source: <official docs URL or reference>"
  Placement: Above implementation using pattern
  
  Examples:
    Good: "// Source: React docs - useState hook"
    Bad: "// Common React pattern"
    
  No Source = Block: External library usage without documentation
```

## Evidence Collection

```yaml
Before: Baseline measurement
During: Progress tracking  
After: Final measurement
Delta: Calculate improvement

Tools:
  Performance: Lighthouse|DevTools|APM
  Code: Coverage reports|Linters|Analyzers
  Time: Git history|Task tracking
```

## Reporting Format

```yaml
Pattern:
  Claim: What improved
  Evidence: How measured
  Result: Specific values
  
Example:
  Claim: "Optimized query performance"
  Evidence: "EXPLAIN ANALYZE before/after"
  Result: "<before>ms → <after>ms (<delta>% faster)"
```