# Thinking Mode Config

## Thinking Mode Flags
```yaml
Command_Flags:
  --think: "Standard thinking mode - Multi-file analysis (4K tokens)"
  --think-hard: "Deep analysis mode - Arch level (10K tokens)"
  --ultrathink: "Critical analysis mode - System redesign (32K tokens)"
  
Default_Behavior:
  No_flag: "Basic mode - Single file, simple tasks"
  
Flag_Combinations:
  With_planning: "--plan --think" # Plan w/ deeper analysis
  With_other_flags: Compatible w/ all command-specific flags
  
Usage_Examples:
  - /user:analyze --code --think         # Standard code analysis
  - /user:design --api --think-hard      # Deep architectural design
  - /user:troubleshoot --ultrathink      # Critical debugging session
  - /user:improve --perf --think   # Perf analysis w/ context
```

## Mode Characteristics
```yaml
Basic (no flag):
  Scope: Single file, <10 lines
  Use_case: Quick fixes, simple edits, direct answers
  Token_usage: Minimal
  
Standard (--think):
  Scope: Multi-file coordination
  Use_case: Feature implementation, moderate complexity
  Token_usage: ~4K tokens
  
Deep (--think-hard):  
  Scope: System architecture, complex patterns
  Use_case: Design decisions, optimization strategies
  Token_usage: ~10K tokens
  
Critical (--ultrathink):
  Scope: Complete system analysis
  Use_case: Redesigns, security audits, critical issues
  Token_usage: ~32K tokens
```

## Auto-Activation Rules
```yaml
Command_Triggers:
  design + --api: Suggest --think-hard for architecture
  troubleshoot + production: Suggest --ultrathink for critical issues
  analyze + --security: Auto-apply --think for comprehensive review
  
Complexity_Detection:
  Multi-file_reference: Upgrade to --think
  Architecture_keywords: Suggest --think-hard
  Critical_terms: Recommend --ultrathink
```

---
*Thinking modes: Control analysis depth through command flags*